
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.PerfilScalarFieldEnum = {
  id: 'id',
  perfil: 'perfil'
};

exports.Prisma.UsuarioScalarFieldEnum = {
  id: 'id',
  senha: 'senha',
  perfil: 'perfil'
};

exports.Prisma.EquipamentoScalarFieldEnum = {
  id: 'id',
  equipamento: 'equipamento',
  imagem: 'imagem',
  descricao: 'descricao',
  ativo: 'ativo',
  data: 'data'
};

exports.Prisma.ComentarioScalarFieldEnum = {
  id: 'id',
  comentario: 'comentario',
  equipamento: 'equipamento',
  perfil: 'perfil',
  data: 'data'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.PerfilOrderByRelevanceFieldEnum = {
  perfil: 'perfil'
};

exports.Prisma.UsuarioOrderByRelevanceFieldEnum = {
  senha: 'senha'
};

exports.Prisma.EquipamentoOrderByRelevanceFieldEnum = {
  equipamento: 'equipamento',
  imagem: 'imagem',
  descricao: 'descricao'
};

exports.Prisma.ComentarioOrderByRelevanceFieldEnum = {
  comentario: 'comentario'
};


exports.Prisma.ModelName = {
  Perfil: 'Perfil',
  Usuario: 'Usuario',
  Equipamento: 'Equipamento',
  Comentario: 'Comentario'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\desenvolvimento2\\Techman\\api\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\desenvolvimento2\\Techman\\api\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.18.0",
  "engineVersion": "34b5a692b7bd79939a9a2c3ef97d816e749cda2f",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Perfil {\n  id          Int          @id @default(autoincrement())\n  perfil      String       @db.VarChar(50)\n  usuarios    Usuario[]\n  comentarios Comentario[]\n}\n\nmodel Usuario {\n  id            Int    @id @default(autoincrement())\n  senha         String @db.VarChar(50)\n  perfil        Int\n  usuarioPerfil Perfil @relation(fields: [perfil], references: [id])\n}\n\nmodel Equipamento {\n  id          Int          @id @default(autoincrement())\n  equipamento String       @db.VarChar(255)\n  imagem      String       @db.VarChar(255)\n  descricao   String       @db.Text\n  ativo       Int\n  data        DateTime     @default(now())\n  comentarios Comentario[]\n}\n\nmodel Comentario {\n  id                    Int         @id @default(autoincrement())\n  comentario            String      @db.Text\n  equipamento           Int\n  perfil                Int\n  data                  DateTime    @default(now())\n  comentarioPerfil      Perfil      @relation(fields: [perfil], references: [id])\n  comentarioEquipamento Equipamento @relation(fields: [equipamento], references: [id], onDelete: Cascade)\n}\n",
  "inlineSchemaHash": "2f0b19a08c1516663e7a0fc4b071d94a73173bd8e960355f194a931eed7c759d",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Perfil\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"perfil\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"usuarios\",\"kind\":\"object\",\"type\":\"Usuario\",\"relationName\":\"PerfilToUsuario\"},{\"name\":\"comentarios\",\"kind\":\"object\",\"type\":\"Comentario\",\"relationName\":\"ComentarioToPerfil\"}],\"dbName\":null},\"Usuario\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"senha\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"perfil\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"usuarioPerfil\",\"kind\":\"object\",\"type\":\"Perfil\",\"relationName\":\"PerfilToUsuario\"}],\"dbName\":null},\"Equipamento\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"equipamento\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imagem\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descricao\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ativo\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comentarios\",\"kind\":\"object\",\"type\":\"Comentario\",\"relationName\":\"ComentarioToEquipamento\"}],\"dbName\":null},\"Comentario\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comentario\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"equipamento\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"perfil\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"comentarioPerfil\",\"kind\":\"object\",\"type\":\"Perfil\",\"relationName\":\"ComentarioToPerfil\"},{\"name\":\"comentarioEquipamento\",\"kind\":\"object\",\"type\":\"Equipamento\",\"relationName\":\"ComentarioToEquipamento\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

